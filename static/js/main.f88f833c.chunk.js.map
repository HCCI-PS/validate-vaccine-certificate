{"version":3,"sources":["graph.js","assets/img/verify-certificate.png","assets/img/qr-code.svg","assets/img/certificate-valid.svg","assets/img/certificate-invalid.svg","assets/img/next-arrow.svg","components/CustomButton/index.js","constants.js","redux/reducers/events.js","assets/img/loading.gif","components/Loader/index.js","components/CertificateStatus/index.js","Api.js","utils/utils.js","components/QRScanner/index.js","assets/img/hexagon.png","components/TopBar/styles.js","components/SignOut/index.js","components/TopBar/index.js","components/VerifyCertificate/index.js","redux/reducers/index.js","redux/store.js","components/Copyright/index.js","components/SignIn/styles.js","components/SignIn/index.js","globalTheme.js","App.js","reportWebVitals.js","index.js","authConfig.js"],"names":["callMsGraph","accessToken","a","headers","Headers","bearer","append","options","method","fetch","graphConfig","graphMeEndpoint","then","response","json","catch","error","console","log","GetUserAvatar","user","responseType","imageType","axios","get","graphUserAvatarEndpoint","imageBytes","Buffer","from","data","toString","imageSrc","CustomButton","children","className","props","CertificateDetailsPathsUpdated","path","format","dose","totalDoses","EVENT_ACTION_TYPES","EVENT_TYPES","initialState","addEventAction","event","type","payload","date","Date","toISOString","Loader","src","LoadingImg","jsigs","require","RSAKeyPair","documentLoader","documentLoaders","node","contexts","credentialsv1","vaccinationContext","vaccinationContextV2","customLoader","url","context","config","certificatePublicKey","undefined","contextUrl","documentUrl","document","startsWith","JSON","parse","CertificateStatus","certificateData","goBack","graphData","useState","isLoading","setLoading","isValid","setValid","setData","useHistory","setTimeout","post","e","useEffect","res","employeeName","displayName","Status","email","mail","dispatch","useDispatch","checkIfRevokedCertificate","extra","getDose","i","j","k","ordinal_suffix_of","signedJSON","publicKey","SECURITY_CONTEXT_URL","id","controller","publicKeyPem","assertionMethod","key","AssertionProofPurpose","purposes","RsaSignature2018","suites","verify","suite","purpose","compactProof","verified","status","credentialSubject","verifyData","CertificateValidImg","CertificateInValidImg","alt","getCertificateStatusAsString","Object","keys","map","index","value","pathOr","optional","style","fontSize","textAlign","replace","onClick","QRScanner","scanBarcode","canvas","createElement","width","height","ctx","getContext","drawImage","video","getImageData","scanImageData","symbols","length","sym","onScan","decode","state","hasUserMedia","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mountedInstances","push","this","userMediaRequested","requestUserMedia","scanTimer","setInterval","nextProps","stringify","videoConstraints","clearInterval","indexOf","splice","stream","getVideoTracks","getAudioTracks","track","stop","window","URL","revokeObjectURL","sourceSelected","constraints","forEach","instance","handleUserMedia","MediaStreamTrack","getSources","sources","videoSource","source","kind","videoSourceId","constraint","deviceId","Array","isArray","ideal","constraintToSourceId","sourceId","err","setState","onError","srcObject","createObjectURL","autoPlay","playsInline","ref","Component","defaultProps","facingMode","useStyles","makeStyles","theme","logo","display","marginLeft","userDetail","breakpoints","up","topBar","backgroundColor","backgroundImage","process","backgroundRepeat","objectFit","backgroundSize","backgroundPosition","SignOut","useMsal","IconButton","aria-label","title","color","logoutRedirect","TopBar","avatar","classes","grow","AppBar","position","elevation","Grid","container","justifyContent","item","HexagonImg","marginTop","edge","aria-haspopup","Avatar","VerifyCertificate","accounts","setGraphData","result","setResult","showScanner","setShowScanner","setAvatar","token","setToken","request","loginRequest","account","acquireTokenSilent","image","func","VerifyCertificateImg","QRCodeImg","JSZip","loadAsync","contents","files","async","combineReducers","events","action","filter","includes","store","serializedState","localStorage","getItem","loadState","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","Copyright","Typography","variant","align","Link","href","getFullYear","root","login","palette","grey","paper","margin","spacing","flexDirection","alignItems","secondary","main","form","submit","boxShadow","SignIn","component","CssBaseline","xs","sm","md","Paper","square","noValidate","Button","fullWidth","loginRedirect","handleLogin","Box","mt","createTheme","primary","light","contrastText","typography","button","textTransform","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","msalInstance","PublicClientApplication","msalConfig","ReactDOM","render","StrictMode","getElementById","auth","clientId","authority","redirectUri","location","origin","socketUri","hostname","cache","cacheLocation","storeAuthStateInCookie","scopes"],"mappings":"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","file":"static/js/main.f88f833c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { graphConfig } from \"./authConfig\";\r\n/**\r\n * Attaches a given access token to a Microsoft Graph API call. Returns information about the user\r\n */\r\nexport async function callMsGraph(accessToken) {\r\n  const headers = new Headers();\r\n  const bearer = `Bearer ${accessToken}`;\r\n\r\n  headers.append(\"Authorization\", bearer);\r\n\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: headers,\r\n  };\r\n\r\n  return fetch(graphConfig.graphMeEndpoint, options)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((error) => console.log(error));\r\n}\r\n\r\nexport async function GetUserAvatar(accessToken, user) {\r\n  const headers = new Headers();\r\n  const bearer = `Bearer ${accessToken}`;\r\n\r\n  headers.append(\"Authorization\", bearer);\r\n\r\n  const options = {\r\n    responseType: 'arraybuffer',\r\n    headers: headers\r\n  };\r\n\r\n  var imageType = \"image/jpeg\";  \r\n\r\n  var response = await axios.get(graphConfig.graphUserAvatarEndpoint(user), options);\r\n  var imageBytes = Buffer.from(response.data).toString('base64');\r\n  var imageSrc = `data:${imageType};base64,${imageBytes}`;\r\n  return imageSrc;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/verify-certificate.29230f43.png\";","export default __webpack_public_path__ + \"static/media/qr-code.0d1efb4c.svg\";","export default __webpack_public_path__ + \"static/media/certificate-valid.6e8564be.svg\";","export default __webpack_public_path__ + \"static/media/certificate-invalid.a9ac96af.svg\";","export default __webpack_public_path__ + \"static/media/next-arrow.2fe80e2d.svg\";","import React from \"react\";\nimport \"./index.css\";\n\nexport const CustomButton = ({children, className, ...props}) => {\n    return (\n        <button className={`custom-button ${className}`} {...props}>{children}</button>\n    )\n}","const monthNames = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\n    \"May\", \"Jun\", \"Jul\", \"Aug\",\n    \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\nexport function formatDate(givenDate) {\n    const dob = new Date(givenDate);\n    let day = (dob.getDate()).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\n    let monthName = monthNames[dob.getMonth()];\n    let year = dob.getFullYear();\n\n    return `${day}-${monthName}-${year}`;\n}\n\nexport const CertificateDetailsPaths = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Age\": {\n        path: [\"credentialSubject\", \"age\"],\n        format: (data) => (data)\n    },\n    \"DOB\": {\n        path: [\"credentialSubject\", \"dob\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Gender\": {\n        path: [\"credentialSubject\", \"gender\"],\n        format: (data) => (data)\n    },\n    \"Certificate ID\": {\n        path: [\"evidence\", \"0\", \"certificateId\"],\n        format: (data) => (data)\n    },\n    \"Beneficiary ID\": {\n        path: [\"credentialSubject\", \"refId\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Name\": {\n        path: [\"evidence\", \"0\", \"vaccine\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Type\": {\n        path: [\"evidence\", \"0\", \"prophylaxis\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Date of ${dose} Dose\": {\n        path: [\"evidence\", \"0\", \"effectiveStart\"],\n        format: (data) => (formatDate(data))\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    },\n    \"Vaccination at\": {\n        path: [\"evidence\", \"0\", \"facility\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Country of Vaccination\": {\n        path: [\"evidence\", \"0\", \"facility\", \"address\", \"addressCountry\"],\n        format: (data) => (data),\n        optional: true\n    }\n};\n\nexport const CertificateDetailsPathsUpdated = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    }\n};","import axios from \"axios\";\n\nconst EVENT_ACTION_TYPES = {\n    ADD_EVENT: \"ADD_EVENT\",\n    REMOVE_EVENT: \"REMOVE_EVENT\"\n};\nexport const EVENT_TYPES = {\n    CERTIFICATE_DOWNLOAD: \"certificate-download\",\n    VALID_VERIFICATION: \"valid-verification\",\n    INVALID_VERIFICATION: \"invalid-verification\",\n    REVOKED_CERTIFICATE: \"revoked-certificate\",\n};\nconst initialState = {\n    data: [],\n};\n\nexport function eventsReducer(state = initialState, action) {\n    switch (action.type) {\n        case EVENT_ACTION_TYPES.ADD_EVENT: {\n            return {\n                ...state,\n                data: [...state.data, {id: state.data.length, ...action.payload}],\n\n            };\n        }\n        case EVENT_ACTION_TYPES.REMOVE_EVENT: {\n            return {\n                ...state,\n                data: state.data.filter(event => !action.payload.includes(event.id)),\n\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addEventAction = (event) => {\n    return {\n        type: EVENT_ACTION_TYPES.ADD_EVENT,\n        payload: {...event, date: new Date().toISOString()}\n    }\n};\n\nconst removeEventsAction = (eventIds) => {\n    return {\n        type: EVENT_ACTION_TYPES.REMOVE_EVENT,\n        payload: eventIds\n    }\n};\n\nexport const postEvents = ({data}, dispatch) => {\n    if (data.length > 0) {\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", data)\n              .then((res) => {\n                  return dispatch(removeEventsAction(data.map(e => e.id)));\n              }).catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n};","export default __webpack_public_path__ + \"static/media/loading.68d0272c.gif\";","import React from \"react\";\nimport LoadingImg from \"../../assets/img/loading.gif\";\nimport \"./index.css\";\n\nexport const Loader = () => {\n    return (\n        <div className=\"loader-wrapper\">\n            <img src={LoadingImg}/>\n\n        </div>\n    )\n};","import React, {useEffect, useState} from \"react\";\r\nimport \"./index.css\";\r\nimport CertificateValidImg from \"../../assets/img/certificate-valid.svg\";\r\nimport CertificateInValidImg from \"../../assets/img/certificate-invalid.svg\";\r\nimport NextArrowImg from \"../../assets/img/next-arrow.svg\";\r\n// import LearnProcessImg from \"../../assets/img/leanr_more_small.png\";\r\n// import FeedbackSmallImg from \"../../assets/img/feedback-small.png\";\r\n// import DownloadSmallImg from \"../../assets/img/download-certificate-small.png\";\r\nimport config from \"../../config\";\r\nimport {pathOr} from \"ramda\";\r\nimport {CustomButton} from \"../CustomButton\";\r\nimport {CertificateDetailsPaths, CertificateDetailsPathsUpdated} from \"../../constants\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addEventAction, EVENT_TYPES} from \"../../redux/reducers/events\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {ordinal_suffix_of} from \"../../utils/utils\";\r\nimport {Loader} from \"../Loader\";\r\nimport { serverUrl } from \"../../Api\";\r\n\r\nconst jsigs = require('jsonld-signatures');\r\nconst {RSAKeyPair} = require('crypto-ld');\r\nconst {documentLoaders} = require('jsonld');\r\nconst {node: documentLoader} = documentLoaders;\r\nconst {contexts} = require('security-context');\r\nconst credentialsv1 = require('../../utils/credentials.json');\r\nconst {vaccinationContext, vaccinationContextV2} = require('vaccination-context');\r\n\r\nconst customLoader = url => {\r\n    console.log(\"checking \" + url);\r\n    const c = {\r\n        \"did:india\": config.certificatePublicKey,\r\n        \"https://example.com/i/india\": config.certificatePublicKey,\r\n        \"https://w3id.org/security/v1\": contexts.get(\"https://w3id.org/security/v1\"),\r\n        'https://www.w3.org/2018/credentials#': credentialsv1,\r\n        \"https://www.w3.org/2018/credentials/v1\": credentialsv1,\r\n        \"https://cowin.gov.in/credentials/vaccination/v1\": vaccinationContext,\r\n        \"https://cowin.gov.in/credentials/vaccination/v2\": vaccinationContextV2,\r\n    };\r\n    let context = c[url];\r\n    if (context === undefined) {\r\n        context = contexts[url];\r\n    }\r\n    if (context !== undefined) {\r\n        return {\r\n            contextUrl: null,\r\n            documentUrl: url,\r\n            document: context\r\n        };\r\n    }\r\n    if (url.startsWith(\"{\")) {\r\n        return JSON.parse(url);\r\n    }\r\n    console.log(\"Fallback url lookup for document :\" + url)\r\n    return documentLoader()(url);\r\n};\r\n\r\nexport const CertificateStatus = ({certificateData, goBack, graphData}) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isValid, setValid] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const history = useHistory();\r\n\r\n    setTimeout(()=>{\r\n        try {\r\n            axios\r\n              .post(\"/divoc/api/v1/events/\", {\"date\":new Date().toISOString(), \"type\":\"verify\"})\r\n              .catch((e) => {\r\n                console.log(e);\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, 100)\r\n\r\n    useEffect(()=>{\r\n        if(isValid){\r\n            var res = axios.post(serverUrl, {employeeName: graphData.displayName, Status:\"Valid\" , email: graphData.mail});\r\n            console.log(res);\r\n        }\r\n    },[isValid]);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        async function verifyData() {\r\n            try {\r\n                console.log(`Data: ${certificateData}`);\r\n                const signedJSON = JSON.parse(certificateData);\r\n                const publicKey = {\r\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\r\n                    id: 'did:india',\r\n                    type: 'RsaVerificationKey2018',\r\n                    controller: 'https://cowin.gov.in/',\r\n                    publicKeyPem: config.certificatePublicKey\r\n                };\r\n                const controller = {\r\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\r\n                    id: 'https://cowin.gov.in/',\r\n                    publicKey: [publicKey],\r\n                    // this authorizes this key to be used for making assertions\r\n                    assertionMethod: [publicKey.id]\r\n                };\r\n                const key = new RSAKeyPair({...publicKey});\r\n                const {AssertionProofPurpose} = jsigs.purposes;\r\n                const {RsaSignature2018} = jsigs.suites;\r\n                const result = await jsigs.verify(signedJSON, {\r\n                    suite: new RsaSignature2018({key}),\r\n                    purpose: new AssertionProofPurpose({controller}),\r\n                    documentLoader: customLoader,\r\n                    compactProof: false\r\n                });\r\n                if (result.verified) {\r\n                    const revokedResponse = await checkIfRevokedCertificate(signedJSON)\r\n                    if (revokedResponse.response.status !== 200) {\r\n                        console.log('Signature verified.');\r\n                        setValid(true);\r\n                        setData(signedJSON);\r\n                        // console.log(`** Data: ${JSON.stringify(signedJSON)}`);\r\n                        dispatch(addEventAction({\r\n                            type: EVENT_TYPES.VALID_VERIFICATION,\r\n                            extra: signedJSON.credentialSubject\r\n                        }));\r\n                        setLoading(false);\r\n                        return;\r\n                    }\r\n                }\r\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: signedJSON}));\r\n                setValid(false);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log('Invalid data', e);\r\n                setValid(false);\r\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: certificateData}));\r\n                setLoading(false);\r\n            }\r\n\r\n        }\r\n        setTimeout(() => {\r\n            verifyData()\r\n        }, 500)\r\n\r\n    }, []);\r\n\r\n    async function checkIfRevokedCertificate(data) {\r\n        return axios\r\n            .post(\"/divoc/api/v1/certificate/revoked\", data)\r\n            .then((res) => {\r\n                dispatch(addEventAction({type: EVENT_TYPES.REVOKED_CERTIFICATE, extra: certificateData}));\r\n                return res\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                return e\r\n            });\r\n    }\r\n\r\n    function getCertificateStatusAsString(data) {\r\n        if (!data || !data[\"evidence\"]) {\r\n            return \"\"\r\n        }\r\n\r\n        const dose = data[\"evidence\"][0][\"dose\"]\r\n        const totalDoses = data[\"evidence\"][0][\"totalDoses\"] || 2\r\n\r\n        if (dose === totalDoses) {\r\n            return \"Final Certificate for COVID-19 Vaccination\"\r\n        } else {\r\n            return `Provisional Certificate for COVID-19 Vaccination (${getDose(data)} Dose)`\r\n        }\r\n    }\r\n\r\n    function getDose(data) {\r\n        if (!data || !data[\"evidence\"]) {\r\n            return \"\"\r\n        }\r\n        return ordinal_suffix_of(data[\"evidence\"][0][\"dose\"])\r\n    }\r\n\r\n    return (\r\n        isLoading ? <Loader/> : <div className=\"certificate-status-wrapper\">\r\n            <img src={isValid ? CertificateValidImg : CertificateInValidImg} alt={\"\"}\r\n                 className=\"certificate-status-image\"/>\r\n            <h3 className=\"certificate-status\">\r\n                {\r\n                    isValid ? \"Certificate Successfully Verified\" : \"Certificate Invalid\"\r\n                }\r\n            </h3>\r\n            <br/>\r\n            {\r\n                isValid && <h5>\r\n                    {\r\n                        getCertificateStatusAsString(data)\r\n                    }\r\n                </h5>\r\n            }\r\n            {\r\n                isValid && <table className=\"mt-3\">\r\n                    {\r\n                        Object.keys(CertificateDetailsPathsUpdated).map((key, index) => {\r\n                            // const context = CertificateDetailsPaths[key];\r\n                            const context = CertificateDetailsPathsUpdated[key];\r\n                            const value = context.format(pathOr(\"NA\", context.path, data));\r\n                            const show = value !== \"NA\" || (value === \"NA\" && !context.optional)\r\n                            return (\r\n                              show && <tr key={index} style={{fontSize:\"smaller\", textAlign: \"left\"}}>\r\n                                    <td className=\"pr-3\" >{key.replace(\"${dose}\", getDose(data))}</td>\r\n                                    <td className=\"font-weight-bolder value-col\">{value}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </table>\r\n            }\r\n            <br/>\r\n            <CustomButton className=\"blue-btn m-3\" onClick={goBack}>Verify Another Certificate</CustomButton>\r\n            {/*<SmallInfoCards text={\"Provide Feedback\"}*/}\r\n            {/*                onClick={() => {*/}\r\n            {/*                    history.push(\"/side-effects\")*/}\r\n            {/*                }}*/}\r\n            {/*                img={FeedbackSmallImg} backgroundColor={\"#FFFBF0\"}/>*/}\r\n            {/*<SmallInfoCards text={\"Learn about the Vaccination process\"} img={LearnProcessImg}*/}\r\n            {/*               onClick={() => {*/}\r\n            {/*                    history.push(\"/learn\")*/}\r\n            {/*                }}*/}\r\n            {/*                backgroundColor={\"#EFF5FD\"}/>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const SmallInfoCards = ({text, img, onClick, backgroundColor}) => (\r\n    <div className=\"small-info-card-wrapper mt-3 mb-3\" style={{backgroundColor: backgroundColor}}>\r\n        <div className=\"w-50 \">\r\n            <img src={img} alt={\"\"} className=\"small-card-img float-right\"/>\r\n        </div>\r\n        <div onClick={onClick}\r\n             className=\"w-50 d-flex flex-column align-items-start justify-content-center font-weight-bold\">\r\n            <span>{text}</span>\r\n            <img src={NextArrowImg} alt={\"\"}/>\r\n        </div>\r\n    </div>\r\n);\r\n","export const serverUrl = 'http://localhost:62399/api/VaccinationStatus'","export function ordinal_suffix_of(i) {\r\n    const j = i % 10,\r\n        k = i % 100;\r\n    if (j === 1 && k !== 11) {\r\n        return i + \"st\";\r\n    }\r\n    if (j === 2 && k !== 12) {\r\n        return i + \"nd\";\r\n    }\r\n    if (j === 3 && k !== 13) {\r\n        return i + \"rd\";\r\n    }\r\n    return i + \"th\";\r\n}","import React, {Component} from 'react';\r\nimport './index.css';\r\nimport {scanImageData} from \"zbar.wasm\";\r\n\r\nconst SCAN_PERIOD_MS = 100;\r\n\r\nfunction hasGetUserMedia() {\r\n    return !!(\r\n        (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\r\n        navigator.webkitGetUserMedia ||\r\n        navigator.mozGetUserMedia ||\r\n        navigator.msGetUserMedia\r\n    );\r\n}\r\n\r\nexport default class QRScanner extends Component {\r\n    static defaultProps = {\r\n        className: '',\r\n        height: 1000,\r\n        width: 1000,\r\n        videoConstraints: {\r\n            facingMode: \"environment\"\r\n        }\r\n    };\r\n\r\n\r\n    static mountedInstances = [];\r\n\r\n    static userMediaRequested = false;\r\n\r\n    static scanTimer = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasUserMedia: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!hasGetUserMedia()) return;\r\n\r\n        QRScanner.mountedInstances.push(this);\r\n\r\n        if (!this.state.hasUserMedia && !QRScanner.userMediaRequested) {\r\n            this.requestUserMedia();\r\n        }\r\n        QRScanner.scanTimer = setInterval(() => {\r\n            this.scanBarcode();\r\n        }, SCAN_PERIOD_MS);\r\n\r\n\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (\r\n            JSON.stringify(nextProps.videoConstraints) !==\r\n            JSON.stringify(this.props.videoConstraints)\r\n        ) {\r\n            this.requestUserMedia();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(QRScanner.scanTimer);\r\n        const index = QRScanner.mountedInstances.indexOf(this);\r\n        QRScanner.mountedInstances.splice(index, 1);\r\n\r\n        QRScanner.userMediaRequested = false;\r\n        if (QRScanner.mountedInstances.length === 0 && this.state.hasUserMedia) {\r\n            if (this.stream.getVideoTracks && this.stream.getAudioTracks) {\r\n                this.stream.getVideoTracks().map(track => track.stop());\r\n            } else {\r\n                this.stream.stop();\r\n            }\r\n            window.URL.revokeObjectURL(this.state.src);\r\n        }\r\n    }\r\n\r\n    scanBarcode = async () => {\r\n\r\n        let canvas = document.createElement('canvas');\r\n        canvas.width = this.props.width;\r\n        canvas.height = this.props.height\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\r\n        let data = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const symbols = await scanImageData(data);\r\n        scanImageData(data)\r\n        // console.log(symbols, Date.now());\r\n        for (let i = 0; i < symbols.length; ++i) {\r\n            const sym = symbols[i];\r\n\r\n            this.props.onScan(sym.decode())\r\n        }\r\n\r\n    }\r\n\r\n\r\n    requestUserMedia() {\r\n        navigator.getUserMedia =\r\n            navigator.mediaDevices.getUserMedia ||\r\n            navigator.webkitGetUserMedia ||\r\n            navigator.mozGetUserMedia ||\r\n            navigator.msGetUserMedia;\r\n\r\n        const sourceSelected = (videoConstraints) => {\r\n            const constraints = {\r\n                video: videoConstraints || true,\r\n            };\r\n\r\n            navigator.mediaDevices\r\n                .getUserMedia(constraints)\r\n                .then((stream) => {\r\n                    QRScanner.mountedInstances.forEach(instance =>\r\n                        instance.handleUserMedia(null, stream),\r\n                    );\r\n                })\r\n                .catch((e) => {\r\n                    QRScanner.mountedInstances.forEach(instance =>\r\n                        instance.handleUserMedia(e),\r\n                    );\r\n                });\r\n        };\r\n\r\n        if ('mediaDevices' in navigator) {\r\n            sourceSelected(this.props.videoConstraints);\r\n        } else {\r\n            const optionalSource = id => ({optional: [{sourceId: id}]});\r\n\r\n            const constraintToSourceId = (constraint) => {\r\n                const deviceId = (constraint || {}).deviceId;\r\n\r\n                if (typeof deviceId === 'string') {\r\n                    return deviceId;\r\n                } else if (Array.isArray(deviceId) && deviceId.length > 0) {\r\n                    return deviceId[0];\r\n                } else if (typeof deviceId === 'object' && deviceId.ideal) {\r\n                    return deviceId.ideal;\r\n                }\r\n\r\n                return null;\r\n            };\r\n\r\n            MediaStreamTrack.getSources((sources) => {\r\n\r\n                let videoSource = null;\r\n\r\n                sources.forEach((source) => {\r\n                    if (source.kind === 'video') {\r\n                        videoSource = source.id;\r\n                    }\r\n                });\r\n\r\n\r\n                const videoSourceId = constraintToSourceId(this.props.videoConstraints);\r\n                if (videoSourceId) {\r\n                    videoSource = videoSourceId;\r\n                }\r\n\r\n                sourceSelected(\r\n                    optionalSource(videoSource),\r\n                );\r\n            });\r\n        }\r\n\r\n        QRScanner.userMediaRequested = true;\r\n    }\r\n\r\n    handleUserMedia(err, stream) {\r\n        if (err) {\r\n            this.setState({hasUserMedia: false});\r\n            this.props.onError(err);\r\n\r\n            return;\r\n        }\r\n\r\n        this.stream = stream;\r\n\r\n        try {\r\n            this.video.srcObject = stream;\r\n            this.setState({hasUserMedia: true});\r\n        } catch (error) {\r\n            this.setState({\r\n                hasUserMedia: true,\r\n                src: window.URL.createObjectURL(stream),\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='videoview'>\r\n                <video\r\n                    autoPlay\r\n                    width={\"100%\"}\r\n                    src={this.state.src}\r\n                    className={this.props.className}\r\n                    playsInline\r\n                    style={this.props.style}\r\n                    ref={(ref) => {\r\n                        this.video = ref;\r\n                    }}\r\n                />\r\n                <canvas id=\"overlay\" className={this.video ? \"viewFinderStyle\":\"\"} width={this.props.width} height={this.props.height}/>\r\n            </div>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/hexagon.ccad253f.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => {\r\n    return {\r\n        logo: {\r\n            display: 'inline',\r\n            marginLeft: 10,\r\n        },\r\n        userDetail: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n            marginRight:10,\r\n        },\r\n        topBar: {\r\n            backgroundColor: '#0088ac',\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/topbar.png)`,\r\n            backgroundRepeat: 'no-repeat',\r\n            objectFit: 'cover',\r\n            backgroundSize: '1400px 100%',\r\n            backgroundPosition: 'center',\r\n        },\r\n    };\r\n});","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n/**\r\n * Renders a button which, when selected, will redirect the page to the logout prompt\r\n */\r\nexport const SignOut = () => {\r\n  const { instance } = useMsal();\r\n\r\n  const handleLogout = () => {\r\n    instance.logoutRedirect().catch((e) => {\r\n      console.error(e);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n    aria-label=\"logout\"\r\n    title=\"Logout\"\r\n    color=\"secondary\"\r\n    onClick={ handleLogout }\r\n  >\r\n    <ExitToAppIcon />\r\n  </IconButton>    \r\n  );\r\n};\r\n","import React from \"react\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HexagonImg from \"../../assets/img/hexagon.png\"\r\nimport { useStyles } from \"./styles\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { SignOut } from \"../SignOut\";\r\n\r\nexport const TopBar = ({user, avatar})=>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.grow}>\r\n        <AppBar\r\n          position=\"fixed\"\r\n          elevation={1}\r\n          className={classes.topBar}\r\n          color=\"default\"\r\n        >\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n                <div className={classes.logo}>\r\n                    <img src={HexagonImg} style={{marginTop: \"10px\"}} className=\"banner-img\" alt=\"Hexagon Logo\" width=\"200\"/>\r\n                </div>\r\n                </Grid>\r\n                <Grid item>\r\n                <div className={classes.userDetail}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-haspopup=\"true\"\r\n                    // onClick={handleProfileClick}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <Avatar\r\n                      alt={user.displayName}\r\n                      user={user.email} src={avatar}\r\n                    />\r\n                    {/* <Avatar user={ user.email } /> */}\r\n                  </IconButton>\r\n                  <SignOut/>\r\n                </div>\r\n            </Grid>\r\n          </Grid>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"./index.css\";\r\nimport VerifyCertificateImg from \"../../assets/img/verify-certificate.png\"\r\nimport QRCodeImg from \"../../assets/img/qr-code.svg\"\r\nimport {CertificateStatus} from \"../CertificateStatus\";\r\nimport {CustomButton} from \"../CustomButton\";\r\nimport QRScanner from \"../QRScanner\";\r\nimport JSZip from \"jszip\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../../authConfig\";\r\nimport  { callMsGraph, GetUserAvatar} from \"../../graph\";\r\nimport { TopBar } from \"../TopBar\";\r\nexport const CERTIFICATE_FILE = \"certificate.json\";\r\n\r\nexport const VerifyCertificate = () => {\r\n    const {instance, accounts} = useMsal();\r\n    const [graphData, setGraphData] = useState(null);\r\n    const [result, setResult] = useState(\"\");\r\n    const [showScanner, setShowScanner] = useState(false);\r\n    const [avatar, setAvatar] = useState(null);\r\n    const [token, setToken] = useState(\"\");\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    useEffect(() => {\r\n      instance.acquireTokenSilent(request).then((response) => {\r\n        setToken(response.accessToken);\r\n        callMsGraph(response.accessToken).then((response) => {\r\n          console.log(`Graph data: ${JSON.stringify(response)}`);  \r\n          setGraphData(response);\r\n        });        \r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      if (graphData !== null) {\r\n        const func = async () => {\r\n          const image = await GetUserAvatar(token, graphData.id);\r\n          setAvatar(image);\r\n        };\r\n        func();\r\n      }\r\n    }, [graphData]);    \r\n\r\n    const handleScan = data => {\r\n        if (data) {\r\n            const zip = new JSZip();\r\n            zip.loadAsync(data).then((contents) => {\r\n                return contents.files[CERTIFICATE_FILE].async('text')\r\n            }).then(function (contents) {\r\n                setResult(contents)\r\n            }).catch(err => {\r\n                    setResult(data)\r\n                }\r\n            );\r\n\r\n        }\r\n    };\r\n    const handleError = err => {\r\n        console.error(err)\r\n    };\r\n    return (\r\n        \r\n        <div className=\"container-fluid verify-certificate-wrapper\">\r\n        { graphData && <TopBar user={graphData} avatar={avatar}/>}\r\n            {\r\n                !result &&\r\n                <div>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    {!showScanner && graphData &&\r\n                    <>\r\n                        <p className=\"text-center\">Welcome {graphData.displayName}</p>\r\n                        <img src={VerifyCertificateImg} className=\"banner-img\" alt=\"banner-img\" height=\"150\"/>\r\n                        <h5 className=\"text-center\">Verify vaccination certificate</h5>\r\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(true)}>\r\n                            <span>Scan QR code</span>\r\n                            <img className=\"ml-3\" src={QRCodeImg} alt={\"\"}/>\r\n                        </CustomButton>                        \r\n                    </>}\r\n                    {showScanner &&\r\n                    <>\r\n                        <QRScanner onError={handleError}\r\n                                   onScan={handleScan}/>\r\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(false)}>BACK</CustomButton>\r\n                    </>\r\n                    }\r\n                </div>\r\n            }\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n\r\n            {\r\n                result && <CertificateStatus certificateData={result} graphData={graphData} goBack={() => {\r\n                    setShowScanner(false);\r\n                    setResult(\"\");\r\n                }\r\n                }/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import { combineReducers } from \"redux\";\nimport {eventsReducer} from \"./events\";\n\nexport default combineReducers({ events: eventsReducer });\n","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n\nconst persistedState = loadState();\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport const Copyright = () => {\r\n    return (\r\n        <Typography\r\n            variant=\"body2\"\r\n            style={ { color: 'white' } }\r\n            align=\"center\">\r\n            { `Copyright © `}\r\n             <Link\r\n                color=\"inherit\"\r\n                href=\"https://hexagon.com/\">\r\n                Hexagon\r\n            </Link> \r\n            { ` ${ new Date().getFullYear() }.` }\r\n        </Typography>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      height: \"100vh\",\r\n    },\r\n    login: {\r\n      backgroundColor: \"#046080\",\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n    },\r\n    image: {\r\n      backgroundImage: `url(${process.env.PUBLIC_URL}/login-bg.jpg)`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundColor:\r\n        theme.palette.type === \"dark\"\r\n          ? theme.palette.grey[900]\r\n          : theme.palette.grey[50],\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    logo: {\r\n      boxShadow: \"none\",\r\n    },\r\n  };\r\n});\r\n","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../../authConfig\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Copyright } from \"../Copyright\";\r\nimport { useStyles } from \"./styles\";\r\nimport HexagonImg from \"../../assets/img/hexagon.png\"\r\n\r\n\r\nexport const SignIn = (props) => {\r\n    const { instance } = useMsal();\r\n    const classes = useStyles();\r\n\r\n    const handleLogin = (instance) => {\r\n      instance.loginRedirect(loginRequest).catch((e) => {\r\n        console.error(e);\r\n      });\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            component=\"main\"\r\n            className={ classes.root }>\r\n            <CssBaseline />\r\n            <Grid\r\n                item\r\n                xs={ false }\r\n                sm={ 4 }\r\n                md={ 7 }\r\n                className={ classes.image } />\r\n            <Grid\r\n                item\r\n                xs={ 12 }\r\n                sm={ 8 }\r\n                md={ 5 }\r\n                component={ Paper }\r\n                className={ classes.login }\r\n                elevation={ 6 }\r\n                square>\r\n                <div className={ classes.paper }>\r\n                    <Avatar className={ classes.avatar }>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        style={ { color: 'white' } }\r\n                        variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <div className={ classes.logo }>\r\n                        <img\r\n                            src={HexagonImg}\r\n                            width={ 200 }\r\n                            alt=\"logo\" />\r\n                    </div>\r\n                    <form\r\n                        className={ classes.form }\r\n                        noValidate>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={ classes.submit }\r\n                            onClick={()=>{ handleLogin(instance)} }>\r\n                            Login with Hexagon\r\n                        </Button>\r\n                        <Box mt={ 5 }>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#4ec53a',\r\n            main: '#52B18E',\r\n            contrastText: '#ffffff',\r\n        },\r\n        secondary: {\r\n            main: '#f7941e',\r\n            contrastText: '#ffffff',\r\n        },\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: 'none',\r\n            main: '#4ec53a',\r\n        },\r\n    },\r\n  });","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { VerifyCertificate } from \"./components/VerifyCertificate\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport {\r\n  AuthenticatedTemplate,\r\n  UnauthenticatedTemplate,\r\n} from \"@azure/msal-react\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { SignIn } from \"./components/SignIn\";\r\nimport {theme} from './globalTheme';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <AuthenticatedTemplate>\r\n          <VerifyCertificate />\r\n        </AuthenticatedTemplate>\r\n        <UnauthenticatedTemplate>\r\n          <SignIn />\r\n        </UnauthenticatedTemplate>\r\n      </Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { MsalProvider } from \"@azure/msal-react\";\r\nimport { msalConfig } from \"./authConfig\";\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MsalProvider instance={msalInstance}>\r\n      <App />\r\n    </MsalProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const msalConfig = {\r\n    auth: {\r\n      clientId: \"08411a04-4a58-4b99-b77a-18666beeac96\",\r\n      authority: \"https://login.microsoftonline.com/1b16ab3e-b8f6-4fe3-9f3e-2db7fe549f6a/\",\r\n      redirectUri: window.location.origin+\"/validate-vaccine-certificate\",\r\n      socketUri: window.location.hostname === 'localhost' ? 'http://localhost:3000/validate-vaccine-certificate' : window.location.origin+\"/validate-vaccine-certificate\",\r\n    },\r\n    cache: {\r\n      cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n      storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    }\r\n  };\r\n  \r\n  // Add scopes here for ID token to be used at Microsoft identity platform endpoints.\r\n  export const loginRequest = {\r\n   scopes: [\"User.Read\"]\r\n  };\r\n  \r\n  // Add the endpoints here for Microsoft Graph API services you'd like to use.\r\n  export const graphConfig = {\r\n      graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\r\n      graphUserAvatarEndpoint: (user) => `https://graph.microsoft.com/v1.0/users/${user}/photo/$value`\r\n  };"],"sourceRoot":""}