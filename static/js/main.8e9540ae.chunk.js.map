{"version":3,"sources":["assets/img/verify-certificate.png","assets/img/hexagon.png","assets/img/qr-code.svg","assets/img/certificate-valid.svg","assets/img/certificate-invalid.svg","assets/img/next-arrow.svg","components/CustomButton/index.js","constants.js","redux/reducers/events.js","assets/img/loading.gif","components/Loader/index.js","components/CertificateStatus/index.js","utils/utils.js","components/QRScanner/index.js","authConfig.js","graph.js","components/VerifyCertificate/index.js","redux/reducers/index.js","redux/store.js","components/PageLayout/SignInButton.js","components/PageLayout/SignOutButton.js","components/PageLayout/index.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","children","className","props","monthNames","CertificateDetailsPaths","path","format","data","optional","givenDate","dob","Date","day","getDate","toLocaleString","minimumIntegerDigits","useGrouping","monthName","getMonth","year","getFullYear","formatDate","dose","totalDoses","CertificateDetailsPathsUpdated","EVENT_ACTION_TYPES","EVENT_TYPES","initialState","addEventAction","event","type","payload","date","toISOString","Loader","src","LoadingImg","jsigs","require","RSAKeyPair","documentLoader","documentLoaders","node","contexts","credentialsv1","vaccinationContext","vaccinationContextV2","customLoader","url","console","log","context","config","certificatePublicKey","get","undefined","contextUrl","documentUrl","document","startsWith","JSON","parse","CertificateStatus","certificateData","goBack","useState","isLoading","setLoading","isValid","setValid","setData","useHistory","setTimeout","axios","post","catch","e","dispatch","useDispatch","checkIfRevokedCertificate","a","then","res","extra","getDose","i","j","k","ordinal_suffix_of","useEffect","signedJSON","publicKey","SECURITY_CONTEXT_URL","id","controller","publicKeyPem","assertionMethod","key","AssertionProofPurpose","purposes","RsaSignature2018","suites","verify","suite","purpose","compactProof","verified","response","status","stringify","credentialSubject","verifyData","CertificateValidImg","CertificateInValidImg","alt","getCertificateStatusAsString","Object","keys","map","index","value","pathOr","style","fontSize","textAlign","replace","onClick","QRScanner","scanBarcode","canvas","createElement","width","height","ctx","getContext","drawImage","video","getImageData","scanImageData","symbols","length","sym","onScan","decode","state","hasUserMedia","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mountedInstances","push","this","userMediaRequested","requestUserMedia","scanTimer","setInterval","nextProps","videoConstraints","clearInterval","indexOf","splice","stream","getVideoTracks","getAudioTracks","track","stop","window","URL","revokeObjectURL","sourceSelected","constraints","forEach","instance","handleUserMedia","MediaStreamTrack","getSources","sources","videoSource","source","kind","videoSourceId","constraint","deviceId","Array","isArray","ideal","constraintToSourceId","sourceId","err","setState","onError","srcObject","error","createObjectURL","autoPlay","playsInline","ref","Component","defaultProps","facingMode","loginRequest","scopes","graphConfig","accessToken","headers","Headers","bearer","append","options","method","fetch","json","VerifyCertificate","useMsal","accounts","graphData","setGraphData","result","setResult","showScanner","setShowScanner","request","account","acquireTokenSilent","callMsGraph","HexagonImg","marginTop","givenName","VerifyCertificateImg","QRCodeImg","JSZip","loadAsync","contents","files","async","combineReducers","events","action","filter","includes","store","serializedState","localStorage","getItem","loadState","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","SignInButton","Button","variant","loginRedirect","handleLogin","SignOutButton","logoutRedirect","handleLogout","PageLayout","isAuthenticated","useIsAuthenticated","Navbar","bg","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","ReactDOM","render","StrictMode","getElementById"],"mappings":"w/LAAe,G,OAAA,IAA0B,gDCA1B,MAA0B,oCCA1B,MAA0B,oC,yBCA1B,G,OAAA,IAA0B,+CCA1B,MAA0B,gD,GCA1B,I,yCCGFA,EAAe,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcC,EAAW,wCAC7D,OACI,gDAAQD,UAAS,wBAAmBA,IAAiBC,GAArD,aAA6DF,MCL/DG,EAAa,CACf,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MAAO,OAYlB,IAAMC,EAA0B,CACnC,KAAQ,CACJC,KAAM,CAAC,oBAAqB,QAC5BC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,IAAO,CACHF,KAAM,CAAC,oBAAqB,OAC5BC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,IAAO,CACHF,KAAM,CAAC,oBAAqB,OAC5BC,OAAQ,SAACC,GAAD,OAAWA,GACnBC,UAAU,GAEd,OAAU,CACNH,KAAM,CAAC,oBAAqB,UAC5BC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,iBAAkB,CACdF,KAAM,CAAC,WAAY,IAAK,iBACxBC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,iBAAkB,CACdF,KAAM,CAAC,oBAAqB,SAC5BC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,eAAgB,CACZF,KAAM,CAAC,WAAY,IAAK,WACxBC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,eAAgB,CACZF,KAAM,CAAC,WAAY,IAAK,eACxBC,OAAQ,SAACC,GAAD,OAAWA,GACnBC,UAAU,GAEd,uBAAwB,CACpBH,KAAM,CAAC,WAAY,IAAK,kBACxBC,OAAQ,SAACC,GAAD,OA9CT,SAAoBE,GACvB,IAAMC,EAAM,IAAIC,KAAKF,GACjBG,EAAOF,EAAIG,UAAWC,eAAe,QAAS,CAACC,qBAAsB,EAAGC,aAAY,IACpFC,EAAYd,EAAWO,EAAIQ,YAC3BC,EAAOT,EAAIU,cAEf,MAAM,GAAN,OAAUR,EAAV,YAAiBK,EAAjB,YAA8BE,GAwCPE,CAAWd,KAElC,qBAAsB,CAClBF,KAAM,CAAC,WAAY,KACnBC,OAAQ,SAACC,GACL,OAAIA,EAAKe,OAASf,EAAKgB,WACZ,uBAEA,qBAInB,iBAAkB,CACdlB,KAAM,CAAC,WAAY,IAAK,WAAY,QACpCC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,yBAA0B,CACtBF,KAAM,CAAC,WAAY,IAAK,WAAY,UAAW,kBAC/CC,OAAQ,SAACC,GAAD,OAAWA,GACnBC,UAAU,IAILgB,EAAiC,CAC1C,KAAQ,CACJnB,KAAM,CAAC,oBAAqB,QAC5BC,OAAQ,SAACC,GAAD,OAAWA,IAEvB,qBAAsB,CAClBF,KAAM,CAAC,WAAY,KACnBC,OAAQ,SAACC,GACL,OAAIA,EAAKe,OAASf,EAAKgB,WACZ,uBAEA,sB,iCCpFjBE,EACS,YADTA,EAEY,eAELC,EAEW,qBAFXA,EAGa,uBAHbA,EAIY,sBAEnBC,EAAe,CACjBpB,KAAM,IAwBH,IAAMqB,EAAiB,SAACC,GAC3B,MAAO,CACHC,KAAML,EACNM,QAAQ,2BAAKF,GAAN,IAAaG,MAAM,IAAIrB,MAAOsB,kB,SCxC9B,UAA0B,oCCI5BC,G,OAAS,WAClB,OACI,qBAAKjC,UAAU,iBAAf,SACI,qBAAKkC,IAAKC,QCYhBC,EAAQC,EAAQ,KACfC,EAAcD,EAAQ,IAAtBC,WAEMC,EADaF,EAAQ,IAA3BG,gBACAC,KACAC,EAAYL,EAAQ,IAApBK,SACDC,EAAgBN,EAAQ,K,EACqBA,EAAQ,KAApDO,E,EAAAA,mBAAoBC,E,EAAAA,qBAErBC,EAAe,SAAAC,GACjBC,QAAQC,IAAI,YAAcF,GAC1B,IASIG,EATM,CACN,YAAaC,EAAOC,qBACpB,8BAA+BD,EAAOC,qBACtC,+BAAgCV,EAASW,IAAI,gCAC7C,uCAAwCV,EACxC,yCAA0CA,EAC1C,kDAAmDC,EACnD,kDAAmDC,GAEvCE,GAIhB,YAHgBO,IAAZJ,IACAA,EAAUR,EAASK,SAEPO,IAAZJ,EACO,CACHK,WAAY,KACZC,YAAaT,EACbU,SAAUP,GAGdH,EAAIW,WAAW,KACRC,KAAKC,MAAMb,IAEtBC,QAAQC,IAAI,qCAAuCF,GAC5CR,IAAiBQ,KAGfc,EAAoB,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,gBAAiBC,EAAY,EAAZA,OAAY,EAC5BC,oBAAS,GADmB,mBACrDC,EADqD,KAC1CC,EAD0C,OAEhCF,oBAAS,GAFuB,mBAErDG,EAFqD,KAE5CC,EAF4C,OAGpCJ,mBAAS,IAH2B,mBAGrD1D,EAHqD,KAG/C+D,EAH+C,KAI5CC,cAEhBC,YAAW,WACP,IACIC,IACGC,KAAK,wBAAyB,CAAC,MAAO,IAAI/D,MAAOsB,cAAe,KAAO,WACvE0C,OAAM,SAACC,GACN3B,QAAQC,IAAI0B,MAElB,MAAOA,GACL3B,QAAQC,IAAI0B,MAEjB,KAEH,IAAMC,EAAWC,cAlB2C,SAgF7CC,EAhF6C,8EAgF5D,WAAyCxE,GAAzC,SAAAyE,EAAA,+EACWP,IACFC,KAAK,oCAAqCnE,GAC1C0E,MAAK,SAACC,GAEH,OADAL,EAASjD,EAAe,CAACE,KAAMJ,EAAiCyD,MAAOpB,KAChEmB,KACRP,OAAM,SAACC,GAEN,OADA3B,QAAQC,IAAI0B,GACLA,MARnB,4CAhF4D,sBA2G5D,SAASQ,EAAQ7E,GACb,OAAKA,GAASA,EAAI,SCpKnB,SAA2B8E,GAC9B,IAAMC,EAAID,EAAI,GACVE,EAAIF,EAAI,IACZ,OAAS,GAALC,GAAe,IAALC,EACHF,EAAI,KAEN,GAALC,GAAe,IAALC,EACHF,EAAI,KAEN,GAALC,GAAe,IAALC,EACHF,EAAI,KAERA,EAAI,KD2JAG,CAAkBjF,EAAI,SAAa,GAAjB,MAFd,GAKf,OA/FAkF,qBAAU,WAAM,4CAEZ,sCAAAT,EAAA,sEAEQ/B,QAAQC,IAAR,gBAAqBa,IACf2B,EAAa9B,KAAKC,MAAME,GACxB4B,EAAY,CACd,WAAYtD,EAAMuD,qBAClBC,GAAI,YACJ/D,KAAM,yBACNgE,WAAY,wBACZC,aAAc3C,EAAOC,sBAEnByC,EAAa,CACf,WAAYzD,EAAMuD,qBAClBC,GAAI,wBACJF,UAAW,CAACA,GAEZK,gBAAiB,CAACL,EAAUE,KAE1BI,EAAM,IAAI1D,EAAJ,eAAmBoD,IACxBO,EAAyB7D,EAAM8D,SAA/BD,sBACAE,EAAoB/D,EAAMgE,OAA1BD,iBApBf,UAqB6B/D,EAAMiE,OAAOZ,EAAY,CAC1Ca,MAAO,IAAIH,EAAiB,CAACH,QAC7BO,QAAS,IAAIN,EAAsB,CAACJ,eACpCtD,eAAgBO,EAChB0D,cAAc,IAzB1B,mBA2BmBC,SA3BnB,kCA4B0C3B,EAA0BW,GA5BpE,WA6BoD,MA7BpD,OA6BgCiB,SAASC,OA7BzC,wBA8BgB3D,QAAQC,IAAI,uBACZmB,GAAS,GACTC,EAAQoB,GACRzC,QAAQC,IAAR,mBAAwBU,KAAKiD,UAAUnB,KACvCb,EAASjD,EAAe,CACpBE,KAAMJ,EACNyD,MAAOO,EAAWoB,qBAEtB3C,GAAW,GAtC3B,2BA0CQU,EAASjD,EAAe,CAACE,KAAMJ,EAAkCyD,MAAOO,KACxErB,GAAS,GACTF,GAAW,GA5CnB,kDA8CQlB,QAAQC,IAAI,eAAZ,MACAmB,GAAS,GACTQ,EAASjD,EAAe,CAACE,KAAMJ,EAAkCyD,MAAOpB,KACxEI,GAAW,GAjDnB,2DAFY,sBACZA,GAAW,GAsDXK,YAAW,YAvDC,mCAwDRuC,KACD,OAEJ,IAqCC7C,EAAY,cAAC,EAAD,IAAY,sBAAKjE,UAAU,6BAAf,UACpB,qBAAKkC,IAAKiC,EAAU4C,EAAsBC,EAAuBC,IAAK,GACjEjH,UAAU,6BACf,oBAAIA,UAAU,qBAAd,SAEQmE,EAAU,oCAAsC,wBAGxD,uBAEIA,GAAW,6BAjCvB,SAAsC7D,GAClC,OAAKA,GAASA,EAAI,SAILA,EAAI,SAAa,GAAjB,QACMA,EAAI,SAAa,GAAjB,YAAqC,GAG7C,6CAED,qDAAN,OAA4D6E,EAAQ7E,GAApE,UATO,GAiCK4G,CAA6B5G,KAKrC6D,GAAW,uBAAOnE,UAAU,OAAjB,SAEHmH,OAAOC,KAAKjH,GAAyBkH,KAAI,SAACrB,EAAKsB,GAE3C,IAAMpE,EAAU3B,EAA+ByE,GACzCuB,EAAQrE,EAAQ7C,OAAOmH,YAAO,KAAMtE,EAAQ9C,KAAME,IAExD,OADuB,OAAViH,GAA6B,OAAVA,IAAmBrE,EAAQ3C,WAEjD,qBAAgBkH,MAAO,CAACC,SAAS,UAAWC,UAAW,QAAvD,UACF,oBAAI3H,UAAU,OAAd,SAAuBgG,EAAI4B,QAAQ,UAAWzC,EAAQ7E,MACtD,oBAAIN,UAAU,+BAAd,SAA8CuH,MAFnCD,QAUnC,uBACA,cAAC,EAAD,CAActH,UAAU,eAAe6H,QAAS9D,EAAhD,4C,0DEhMS+D,G,kDAiBjB,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IA8CV8H,YA/CmB,sBA+CL,sCAAAhD,EAAA,6DAENiD,EAASvE,SAASwE,cAAc,WAC7BC,MAAQ,EAAKjI,MAAMiI,MAC1BF,EAAOG,OAAS,EAAKlI,MAAMkI,QACvBC,EAAMJ,EAAOK,WAAW,OACxBC,UAAU,EAAKC,MAAO,EAAG,EAAG,EAAKtI,MAAMiI,MAAO,EAAKjI,MAAMkI,QACzD7H,EAAO8H,EAAII,aAAa,EAAG,EAAGR,EAAOE,MAAOF,EAAOG,QAP7C,SAQYM,wBAAcnI,GAR1B,OAWV,IAHMoI,EARI,OASVD,wBAAcnI,GAEL8E,EAAI,EAAGA,EAAIsD,EAAQC,SAAUvD,EAC5BwD,EAAMF,EAAQtD,GAEpB,EAAKnF,MAAM4I,OAAOD,EAAIE,UAdhB,4CA7CV,EAAKC,MAAQ,CACTC,cAAc,GAHH,E,qDAOnB,WAAqB,IAAD,QA/BfC,UAAUC,cAAgBD,UAAUC,aAAaC,cAClDF,UAAUG,oBACVH,UAAUI,iBACVJ,UAAUK,kBA+BVxB,EAAUyB,iBAAiBC,KAAKC,MAE3BA,KAAKV,MAAMC,cAAiBlB,EAAU4B,oBACvCD,KAAKE,mBAET7B,EAAU8B,UAAYC,aAAY,WAC9B,EAAK9B,gBA5CM,Q,iCAkDnB,SAAoB+B,GAEZnG,KAAKiD,UAAUkD,EAAUC,oBACzBpG,KAAKiD,UAAU6C,KAAKxJ,MAAM8J,mBAE1BN,KAAKE,qB,kCAIb,WACIK,cAAclC,EAAU8B,WACxB,IAAMtC,EAAQQ,EAAUyB,iBAAiBU,QAAQR,MACjD3B,EAAUyB,iBAAiBW,OAAO5C,EAAO,GAEzCQ,EAAU4B,oBAAqB,EACW,IAAtC5B,EAAUyB,iBAAiBZ,QAAgBc,KAAKV,MAAMC,eAClDS,KAAKU,OAAOC,gBAAkBX,KAAKU,OAAOE,eAC1CZ,KAAKU,OAAOC,iBAAiB/C,KAAI,SAAAiD,GAAK,OAAIA,EAAMC,UAEhDd,KAAKU,OAAOI,OAEhBC,OAAOC,IAAIC,gBAAgBjB,KAAKV,MAAM7G,Q,8BAwB9C,WAAoB,IAAD,OACf+G,UAAUE,aACNF,UAAUC,aAAaC,cACvBF,UAAUG,oBACVH,UAAUI,iBACVJ,UAAUK,eAEd,IAAMqB,EAAiB,SAACZ,GACpB,IAAMa,EAAc,CAChBrC,MAAOwB,IAAoB,GAG/Bd,UAAUC,aACLC,aAAayB,GACb5F,MAAK,SAACmF,GACHrC,EAAUyB,iBAAiBsB,SAAQ,SAAAC,GAAQ,OACvCA,EAASC,gBAAgB,KAAMZ,SAGtCzF,OAAM,SAACC,GACJmD,EAAUyB,iBAAiBsB,SAAQ,SAAAC,GAAQ,OACvCA,EAASC,gBAAgBpG,UAKzC,GAAI,iBAAkBsE,UAClB0B,EAAelB,KAAKxJ,MAAM8J,sBACvB,CAiBHiB,iBAAiBC,YAAW,SAACC,GAEzB,IAAIC,EAAc,KAElBD,EAAQL,SAAQ,SAACO,GACO,UAAhBA,EAAOC,OACPF,EAAcC,EAAOxF,OAK7B,IAAM0F,EAzBmB,SAACC,GAC1B,IAAMC,GAAYD,GAAc,IAAIC,SAEpC,MAAwB,kBAAbA,EACAA,EACAC,MAAMC,QAAQF,IAAaA,EAAS7C,OAAS,EAC7C6C,EAAS,GACW,kBAAbA,GAAyBA,EAASG,MACzCH,EAASG,MAGb,KAceC,CAAqB,EAAK3L,MAAM8J,kBAClDuB,IACAH,EAAcG,GAGlBX,EAhC0B,CAACpK,SAAU,CAAC,CAACsL,SAiCpBV,SAK3BrD,EAAU4B,oBAAqB,I,6BAGnC,SAAgBoC,EAAK3B,GACjB,GAAI2B,EAIA,OAHArC,KAAKsC,SAAS,CAAC/C,cAAc,SAC7BS,KAAKxJ,MAAM+L,QAAQF,GAKvBrC,KAAKU,OAASA,EAEd,IACIV,KAAKlB,MAAM0D,UAAY9B,EACvBV,KAAKsC,SAAS,CAAC/C,cAAc,IAC/B,MAAOkD,GACLzC,KAAKsC,SAAS,CACV/C,cAAc,EACd9G,IAAKsI,OAAOC,IAAI0B,gBAAgBhC,Q,oBAM5C,WAAU,IAAD,OACL,OACI,sBAAKvE,GAAG,YAAR,UACI,uBACIwG,UAAQ,EACRlE,MAAO,OACPhG,IAAKuH,KAAKV,MAAM7G,IAChBlC,UAAWyJ,KAAKxJ,MAAMD,UACtBqM,aAAW,EACX5E,MAAOgC,KAAKxJ,MAAMwH,MAClB6E,IAAK,SAACA,GACF,EAAK/D,MAAQ+D,KAGrB,wBAAQ1G,GAAG,UAAUsC,MAAOuB,KAAKxJ,MAAMiI,MAAOC,OAAQsB,KAAKxJ,MAAMkI,gB,GA9L1CoE,aAAlBzE,GACV0E,aAAe,CAClBxM,UAAW,GACXmI,OAAQ,IACRD,MAAO,IACP6B,iBAAkB,CACd0C,WAAY,gBANH3E,GAWVyB,iBAAmB,GAXTzB,GAaV4B,oBAAqB,EAbX5B,GAeV8B,UAAY,K,kCCjBR8C,GAAe,CAC3BC,OAAQ,CAAC,cAIGC,GACQ,sC,8CCfhB,WAA2BC,GAA3B,mBAAA9H,EAAA,6DACG+H,EAAU,IAAIC,QACdC,EAFH,iBAEsBH,GAEzBC,EAAQG,OAAO,gBAAiBD,GAE1BE,EAAU,CACZC,OAAQ,MACRL,QAASA,GARV,kBAWIM,MAAMR,GAA6BM,GACrClI,MAAK,SAAA0B,GAAoC,OAAvB1D,QAAQC,IAAIyD,GAAkBA,EAAS2G,UACzD3I,OAAM,SAAAwH,GAAK,OAAIlJ,QAAQC,IAAIiJ,OAb7B,4C,sBCQA,IAEMoB,GAAoB,WAAO,IAAD,EACNC,eAAtBzC,EAD4B,EAC5BA,SAAU0C,EADkB,EAClBA,SADkB,EAEDxJ,qBAFC,mBAE5ByJ,EAF4B,KAEjBC,EAFiB,OAGP1J,mBAAS,IAHF,mBAG5B2J,EAH4B,KAGpBC,EAHoB,OAIG5J,oBAAS,GAJZ,mBAI5B6J,EAJ4B,KAIfC,EAJe,KAK7BC,EAAO,2BACNrB,IADM,IAETsB,QAASR,EAAS,KAGtBhI,qBAAU,WACNsF,EAASmD,mBAAmBF,GAAS/I,MAAK,SAAC0B,IDrB5C,SAAP,oCCsBQwH,CAAYxH,EAASmG,aAAa7H,MAAK,SAAA0B,GACrCgH,EAAahH,WAIhB,IAmBH,OACI,sBAAK1G,UAAU,6CAAf,WAES2N,GACD,sCACME,GACF,qCACI,qBAAK3L,IAAKiM,EAAY1G,MAAO,CAAC2G,UAAW,QAASpO,UAAU,aAAaiH,IAAI,eAAeiB,MAAM,QACjGuF,GAAa,yCAAYA,EAAUY,aACpC,qBAAKnM,IAAKoM,EAAsBtO,UAAU,aAAaiH,IAAI,aAAakB,OAAO,QAC/E,oBAAInI,UAAU,cAAd,4CACA,eAAC,EAAD,CAAcA,UAAU,YAAY6H,QAAS,kBAAMiG,GAAe,IAAlE,UACI,gDACA,qBAAK9N,UAAU,OAAOkC,IAAKqM,EAAWtH,IAAK,WAGlD4G,GACD,qCACI,cAAC,GAAD,CAAW7B,QArBX,SAAAF,GAChB9I,QAAQkJ,MAAMJ,IAqBajD,OApCZ,SAAAvI,GACXA,IACY,IAAIkO,MACZC,UAAUnO,GAAM0E,MAAK,SAAC0J,GACtB,OAAOA,EAASC,MAzBA,oBAyBwBC,MAAM,WAC/C5J,MAAK,SAAU0J,GACdd,EAAUc,MACXhK,OAAM,SAAAoH,GACD8B,EAAUtN,SA6BN,cAAC,EAAD,CAAcN,UAAU,YAAY6H,QAAS,kBAAMiG,GAAe,IAAlE,wBAMRH,GAAU,cAAC,EAAD,CAAmB7J,gBAAiB6J,EAAQ5J,OAAQ,WAC1D+J,GAAe,GACfF,EAAU,W,SC3EfiB,gBAAgB,CAAEC,OTa1B,WAAsD,IAA/B/F,EAA8B,uDAAtBrH,EAAcqN,EAAQ,uCACxD,OAAQA,EAAOlN,MACX,KAAKL,EACD,OAAO,2BACAuH,GADP,IAEIzI,KAAK,GAAD,mBAAMyI,EAAMzI,MAAZ,cAAmBsF,GAAImD,EAAMzI,KAAKqI,QAAWoG,EAAOjN,aAIhE,KAAKN,EACD,OAAO,2BACAuH,GADP,IAEIzI,KAAMyI,EAAMzI,KAAK0O,QAAO,SAAApN,GAAK,OAAKmN,EAAOjN,QAAQmN,SAASrN,EAAMgE,SAIxE,QACI,OAAOmD,MUPNmG,IAvBK,WACd,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACA,OAEGxL,KAAKC,MAAMuL,GACpB,MAAOrD,GACL,QAaewD,GAEFC,aACjBC,GACAhF,OAAOiF,8BAAgCjF,OAAOiF,iC,mBCb3C,IAAMC,GAAe,WAAO,IACzB5E,EAAayC,eAAbzC,SAER,OACE,cAAC6E,GAAA,EAAD,CACEC,QAAQ,YACR5P,UAAU,UACV6H,QAAS,kBAjBf,SAAqBiD,GACnBA,EAAS+E,cAAcnD,IACtBhI,OAAM,SAACC,GACN3B,QAAQkJ,MAAMvH,MAcGmL,CAAYhF,IAH7B,sBCLG,IAAMiF,GAAgB,WAAO,IAC1BjF,EAAayC,eAAbzC,SAER,OACE,cAAC6E,GAAA,EAAD,CACEC,QAAQ,YACR5P,UAAU,UACV6H,QAAS,kBAjBf,SAAsBiD,GACpBA,EAASkF,iBACRtL,OAAM,SAACC,GACN3B,QAAQkJ,MAAMvH,MAcGsL,CAAanF,IAH9B,uBCTSoF,GAAa,SAACjQ,GACvB,IAAMkQ,EAAkBC,eAExB,OACI,qCACI,eAACC,GAAA,EAAD,CAAQC,GAAG,YAAYV,QAAQ,OAA/B,UACI,mBAAG5P,UAAU,eAAeuQ,KAAK,IAAjC,4CACGJ,EAAkB,cAAC,GAAD,IAAkB,cAAC,GAAD,OAE3C,uBACA,uBACClQ,EAAMF,aCQJyQ,OAjBf,WACE,OACE,cAAC,IAAD,CAAUtB,MAAOA,GAAjB,SACE,qBAAKlP,UAAU,MAAf,SACE,eAAC,GAAD,WACE,cAAC,KAAD,UACE,cAAC,GAAD,MAEF,cAAC,KAAD,UACE,iFCRGyQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3L,MAAK,YAAkD,IAA/C4L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGRO,I,OAAe,I,OAAIC,GVVC,CACtBC,KAAM,CACJC,SAAU,uCACVC,UAAW,0EACXC,YAAa,sDAEfC,MAAO,CACLC,cAAe,iBACfC,wBAAwB,MUI9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAc9G,SAAUmG,GAAxB,SACE,cAAC,GAAD,QAGJxN,SAASoO,eAAe,SAM1BpB,M","file":"static/js/main.8e9540ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/verify-certificate.29230f43.png\";","export default __webpack_public_path__ + \"static/media/hexagon.ccad253f.png\";","export default __webpack_public_path__ + \"static/media/qr-code.0d1efb4c.svg\";","export default __webpack_public_path__ + \"static/media/certificate-valid.6e8564be.svg\";","export default __webpack_public_path__ + \"static/media/certificate-invalid.a9ac96af.svg\";","export default __webpack_public_path__ + \"static/media/next-arrow.2fe80e2d.svg\";","import React from \"react\";\nimport \"./index.css\";\n\nexport const CustomButton = ({children, className, ...props}) => {\n    return (\n        <button className={`custom-button ${className}`} {...props}>{children}</button>\n    )\n}","const monthNames = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\n    \"May\", \"Jun\", \"Jul\", \"Aug\",\n    \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\nexport function formatDate(givenDate) {\n    const dob = new Date(givenDate);\n    let day = (dob.getDate()).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\n    let monthName = monthNames[dob.getMonth()];\n    let year = dob.getFullYear();\n\n    return `${day}-${monthName}-${year}`;\n}\n\nexport const CertificateDetailsPaths = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Age\": {\n        path: [\"credentialSubject\", \"age\"],\n        format: (data) => (data)\n    },\n    \"DOB\": {\n        path: [\"credentialSubject\", \"dob\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Gender\": {\n        path: [\"credentialSubject\", \"gender\"],\n        format: (data) => (data)\n    },\n    \"Certificate ID\": {\n        path: [\"evidence\", \"0\", \"certificateId\"],\n        format: (data) => (data)\n    },\n    \"Beneficiary ID\": {\n        path: [\"credentialSubject\", \"refId\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Name\": {\n        path: [\"evidence\", \"0\", \"vaccine\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Type\": {\n        path: [\"evidence\", \"0\", \"prophylaxis\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Date of ${dose} Dose\": {\n        path: [\"evidence\", \"0\", \"effectiveStart\"],\n        format: (data) => (formatDate(data))\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    },\n    \"Vaccination at\": {\n        path: [\"evidence\", \"0\", \"facility\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Country of Vaccination\": {\n        path: [\"evidence\", \"0\", \"facility\", \"address\", \"addressCountry\"],\n        format: (data) => (data),\n        optional: true\n    }\n};\n\nexport const CertificateDetailsPathsUpdated = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    }\n};","import axios from \"axios\";\n\nconst EVENT_ACTION_TYPES = {\n    ADD_EVENT: \"ADD_EVENT\",\n    REMOVE_EVENT: \"REMOVE_EVENT\"\n};\nexport const EVENT_TYPES = {\n    CERTIFICATE_DOWNLOAD: \"certificate-download\",\n    VALID_VERIFICATION: \"valid-verification\",\n    INVALID_VERIFICATION: \"invalid-verification\",\n    REVOKED_CERTIFICATE: \"revoked-certificate\",\n};\nconst initialState = {\n    data: [],\n};\n\nexport function eventsReducer(state = initialState, action) {\n    switch (action.type) {\n        case EVENT_ACTION_TYPES.ADD_EVENT: {\n            return {\n                ...state,\n                data: [...state.data, {id: state.data.length, ...action.payload}],\n\n            };\n        }\n        case EVENT_ACTION_TYPES.REMOVE_EVENT: {\n            return {\n                ...state,\n                data: state.data.filter(event => !action.payload.includes(event.id)),\n\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addEventAction = (event) => {\n    return {\n        type: EVENT_ACTION_TYPES.ADD_EVENT,\n        payload: {...event, date: new Date().toISOString()}\n    }\n};\n\nconst removeEventsAction = (eventIds) => {\n    return {\n        type: EVENT_ACTION_TYPES.REMOVE_EVENT,\n        payload: eventIds\n    }\n};\n\nexport const postEvents = ({data}, dispatch) => {\n    if (data.length > 0) {\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", data)\n              .then((res) => {\n                  return dispatch(removeEventsAction(data.map(e => e.id)));\n              }).catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n};","export default __webpack_public_path__ + \"static/media/loading.68d0272c.gif\";","import React from \"react\";\nimport LoadingImg from \"../../assets/img/loading.gif\";\nimport \"./index.css\";\n\nexport const Loader = () => {\n    return (\n        <div className=\"loader-wrapper\">\n            <img src={LoadingImg}/>\n\n        </div>\n    )\n};","import React, {useEffect, useState} from \"react\";\nimport \"./index.css\";\nimport CertificateValidImg from \"../../assets/img/certificate-valid.svg\";\nimport CertificateInValidImg from \"../../assets/img/certificate-invalid.svg\";\nimport NextArrowImg from \"../../assets/img/next-arrow.svg\";\n// import LearnProcessImg from \"../../assets/img/leanr_more_small.png\";\n// import FeedbackSmallImg from \"../../assets/img/feedback-small.png\";\n// import DownloadSmallImg from \"../../assets/img/download-certificate-small.png\";\nimport config from \"../../config\";\nimport {pathOr} from \"ramda\";\nimport {CustomButton} from \"../CustomButton\";\nimport {CertificateDetailsPaths, CertificateDetailsPathsUpdated} from \"../../constants\";\nimport {useDispatch} from \"react-redux\";\nimport {addEventAction, EVENT_TYPES} from \"../../redux/reducers/events\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {ordinal_suffix_of} from \"../../utils/utils\";\nimport {Loader} from \"../Loader\";\n\nconst jsigs = require('jsonld-signatures');\nconst {RSAKeyPair} = require('crypto-ld');\nconst {documentLoaders} = require('jsonld');\nconst {node: documentLoader} = documentLoaders;\nconst {contexts} = require('security-context');\nconst credentialsv1 = require('../../utils/credentials.json');\nconst {vaccinationContext, vaccinationContextV2} = require('vaccination-context');\n\nconst customLoader = url => {\n    console.log(\"checking \" + url);\n    const c = {\n        \"did:india\": config.certificatePublicKey,\n        \"https://example.com/i/india\": config.certificatePublicKey,\n        \"https://w3id.org/security/v1\": contexts.get(\"https://w3id.org/security/v1\"),\n        'https://www.w3.org/2018/credentials#': credentialsv1,\n        \"https://www.w3.org/2018/credentials/v1\": credentialsv1,\n        \"https://cowin.gov.in/credentials/vaccination/v1\": vaccinationContext,\n        \"https://cowin.gov.in/credentials/vaccination/v2\": vaccinationContextV2,\n    };\n    let context = c[url];\n    if (context === undefined) {\n        context = contexts[url];\n    }\n    if (context !== undefined) {\n        return {\n            contextUrl: null,\n            documentUrl: url,\n            document: context\n        };\n    }\n    if (url.startsWith(\"{\")) {\n        return JSON.parse(url);\n    }\n    console.log(\"Fallback url lookup for document :\" + url)\n    return documentLoader()(url);\n};\n\nexport const CertificateStatus = ({certificateData, goBack}) => {\n    const [isLoading, setLoading] = useState(false);\n    const [isValid, setValid] = useState(false);\n    const [data, setData] = useState({});\n    const history = useHistory();\n\n    setTimeout(()=>{\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", {\"date\":new Date().toISOString(), \"type\":\"verify\"})\n              .catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }, 100)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        setLoading(true);\n        async function verifyData() {\n            try {\n                console.log(`Data: ${certificateData}`);\n                const signedJSON = JSON.parse(certificateData);\n                const publicKey = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'did:india',\n                    type: 'RsaVerificationKey2018',\n                    controller: 'https://cowin.gov.in/',\n                    publicKeyPem: config.certificatePublicKey\n                };\n                const controller = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'https://cowin.gov.in/',\n                    publicKey: [publicKey],\n                    // this authorizes this key to be used for making assertions\n                    assertionMethod: [publicKey.id]\n                };\n                const key = new RSAKeyPair({...publicKey});\n                const {AssertionProofPurpose} = jsigs.purposes;\n                const {RsaSignature2018} = jsigs.suites;\n                const result = await jsigs.verify(signedJSON, {\n                    suite: new RsaSignature2018({key}),\n                    purpose: new AssertionProofPurpose({controller}),\n                    documentLoader: customLoader,\n                    compactProof: false\n                });\n                if (result.verified) {\n                    const revokedResponse = await checkIfRevokedCertificate(signedJSON)\n                    if (revokedResponse.response.status !== 200) {\n                        console.log('Signature verified.');\n                        setValid(true);\n                        setData(signedJSON);\n                        console.log(`** Data: ${JSON.stringify(signedJSON)}`);\n                        dispatch(addEventAction({\n                            type: EVENT_TYPES.VALID_VERIFICATION,\n                            extra: signedJSON.credentialSubject\n                        }));\n                        setLoading(false);\n                        return;\n                    }\n                }\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: signedJSON}));\n                setValid(false);\n                setLoading(false);\n            } catch (e) {\n                console.log('Invalid data', e);\n                setValid(false);\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: certificateData}));\n                setLoading(false);\n            }\n\n        }\n        setTimeout(() => {\n            verifyData()\n        }, 500)\n\n    }, []);\n\n    async function checkIfRevokedCertificate(data) {\n        return axios\n            .post(\"/divoc/api/v1/certificate/revoked\", data)\n            .then((res) => {\n                dispatch(addEventAction({type: EVENT_TYPES.REVOKED_CERTIFICATE, extra: certificateData}));\n                return res\n            }).catch((e) => {\n                console.log(e);\n                return e\n            });\n    }\n\n    function getCertificateStatusAsString(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n\n        const dose = data[\"evidence\"][0][\"dose\"]\n        const totalDoses = data[\"evidence\"][0][\"totalDoses\"] || 2\n\n        if (dose === totalDoses) {\n            return \"Final Certificate for COVID-19 Vaccination\"\n        } else {\n            return `Provisional Certificate for COVID-19 Vaccination (${getDose(data)} Dose)`\n        }\n    }\n\n    function getDose(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n        return ordinal_suffix_of(data[\"evidence\"][0][\"dose\"])\n    }\n\n    return (\n        isLoading ? <Loader/> : <div className=\"certificate-status-wrapper\">\n            <img src={isValid ? CertificateValidImg : CertificateInValidImg} alt={\"\"}\n                 className=\"certificate-status-image\"/>\n            <h3 className=\"certificate-status\">\n                {\n                    isValid ? \"Certificate Successfully Verified\" : \"Certificate Invalid\"\n                }\n            </h3>\n            <br/>\n            {\n                isValid && <h5>\n                    {\n                        getCertificateStatusAsString(data)\n                    }\n                </h5>\n            }\n            {\n                isValid && <table className=\"mt-3\">\n                    {\n                        Object.keys(CertificateDetailsPaths).map((key, index) => {\n                            // const context = CertificateDetailsPaths[key];\n                            const context = CertificateDetailsPathsUpdated[key];\n                            const value = context.format(pathOr(\"NA\", context.path, data));\n                            const show = value !== \"NA\" || (value === \"NA\" && !context.optional)\n                            return (\n                              show && <tr key={index} style={{fontSize:\"smaller\", textAlign: \"left\"}}>\n                                    <td className=\"pr-3\" >{key.replace(\"${dose}\", getDose(data))}</td>\n                                    <td className=\"font-weight-bolder value-col\">{value}</td>\n                                </tr>\n                            )\n                        })\n                    }\n\n                </table>\n            }\n            <br/>\n            <CustomButton className=\"blue-btn m-3\" onClick={goBack}>Verify Another Certificate</CustomButton>\n            {/*<SmallInfoCards text={\"Provide Feedback\"}*/}\n            {/*                onClick={() => {*/}\n            {/*                    history.push(\"/side-effects\")*/}\n            {/*                }}*/}\n            {/*                img={FeedbackSmallImg} backgroundColor={\"#FFFBF0\"}/>*/}\n            {/*<SmallInfoCards text={\"Learn about the Vaccination process\"} img={LearnProcessImg}*/}\n            {/*               onClick={() => {*/}\n            {/*                    history.push(\"/learn\")*/}\n            {/*                }}*/}\n            {/*                backgroundColor={\"#EFF5FD\"}/>*/}\n        </div>\n    )\n};\n\nexport const SmallInfoCards = ({text, img, onClick, backgroundColor}) => (\n    <div className=\"small-info-card-wrapper mt-3 mb-3\" style={{backgroundColor: backgroundColor}}>\n        <div className=\"w-50 \">\n            <img src={img} alt={\"\"} className=\"small-card-img float-right\"/>\n        </div>\n        <div onClick={onClick}\n             className=\"w-50 d-flex flex-column align-items-start justify-content-center font-weight-bold\">\n            <span>{text}</span>\n            <img src={NextArrowImg} alt={\"\"}/>\n        </div>\n    </div>\n);\n","export function ordinal_suffix_of(i) {\n    const j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return i + \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return i + \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return i + \"rd\";\n    }\n    return i + \"th\";\n}","import React, {Component} from 'react';\nimport './index.css';\nimport {scanImageData} from \"zbar.wasm\";\n\nconst SCAN_PERIOD_MS = 100;\n\nfunction hasGetUserMedia() {\n    return !!(\n        (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n    );\n}\n\nexport default class QRScanner extends Component {\n    static defaultProps = {\n        className: '',\n        height: 1000,\n        width: 1000,\n        videoConstraints: {\n            facingMode: \"environment\"\n        }\n    };\n\n\n    static mountedInstances = [];\n\n    static userMediaRequested = false;\n\n    static scanTimer = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasUserMedia: false,\n        };\n    }\n\n    componentDidMount() {\n        if (!hasGetUserMedia()) return;\n\n        QRScanner.mountedInstances.push(this);\n\n        if (!this.state.hasUserMedia && !QRScanner.userMediaRequested) {\n            this.requestUserMedia();\n        }\n        QRScanner.scanTimer = setInterval(() => {\n            this.scanBarcode();\n        }, SCAN_PERIOD_MS);\n\n\n    }\n\n    componentWillUpdate(nextProps) {\n        if (\n            JSON.stringify(nextProps.videoConstraints) !==\n            JSON.stringify(this.props.videoConstraints)\n        ) {\n            this.requestUserMedia();\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(QRScanner.scanTimer);\n        const index = QRScanner.mountedInstances.indexOf(this);\n        QRScanner.mountedInstances.splice(index, 1);\n\n        QRScanner.userMediaRequested = false;\n        if (QRScanner.mountedInstances.length === 0 && this.state.hasUserMedia) {\n            if (this.stream.getVideoTracks && this.stream.getAudioTracks) {\n                this.stream.getVideoTracks().map(track => track.stop());\n            } else {\n                this.stream.stop();\n            }\n            window.URL.revokeObjectURL(this.state.src);\n        }\n    }\n\n    scanBarcode = async () => {\n\n        let canvas = document.createElement('canvas');\n        canvas.width = this.props.width;\n        canvas.height = this.props.height\n        let ctx = canvas.getContext('2d');\n        ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\n        let data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const symbols = await scanImageData(data);\n        scanImageData(data)\n        // console.log(symbols, Date.now());\n        for (let i = 0; i < symbols.length; ++i) {\n            const sym = symbols[i];\n\n            this.props.onScan(sym.decode())\n        }\n\n    }\n\n\n    requestUserMedia() {\n        navigator.getUserMedia =\n            navigator.mediaDevices.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia;\n\n        const sourceSelected = (videoConstraints) => {\n            const constraints = {\n                video: videoConstraints || true,\n            };\n\n            navigator.mediaDevices\n                .getUserMedia(constraints)\n                .then((stream) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(null, stream),\n                    );\n                })\n                .catch((e) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(e),\n                    );\n                });\n        };\n\n        if ('mediaDevices' in navigator) {\n            sourceSelected(this.props.videoConstraints);\n        } else {\n            const optionalSource = id => ({optional: [{sourceId: id}]});\n\n            const constraintToSourceId = (constraint) => {\n                const deviceId = (constraint || {}).deviceId;\n\n                if (typeof deviceId === 'string') {\n                    return deviceId;\n                } else if (Array.isArray(deviceId) && deviceId.length > 0) {\n                    return deviceId[0];\n                } else if (typeof deviceId === 'object' && deviceId.ideal) {\n                    return deviceId.ideal;\n                }\n\n                return null;\n            };\n\n            MediaStreamTrack.getSources((sources) => {\n\n                let videoSource = null;\n\n                sources.forEach((source) => {\n                    if (source.kind === 'video') {\n                        videoSource = source.id;\n                    }\n                });\n\n\n                const videoSourceId = constraintToSourceId(this.props.videoConstraints);\n                if (videoSourceId) {\n                    videoSource = videoSourceId;\n                }\n\n                sourceSelected(\n                    optionalSource(videoSource),\n                );\n            });\n        }\n\n        QRScanner.userMediaRequested = true;\n    }\n\n    handleUserMedia(err, stream) {\n        if (err) {\n            this.setState({hasUserMedia: false});\n            this.props.onError(err);\n\n            return;\n        }\n\n        this.stream = stream;\n\n        try {\n            this.video.srcObject = stream;\n            this.setState({hasUserMedia: true});\n        } catch (error) {\n            this.setState({\n                hasUserMedia: true,\n                src: window.URL.createObjectURL(stream),\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div id='videoview'>\n                <video\n                    autoPlay\n                    width={\"100%\"}\n                    src={this.state.src}\n                    className={this.props.className}\n                    playsInline\n                    style={this.props.style}\n                    ref={(ref) => {\n                        this.video = ref;\n                    }}\n                />\n                <canvas id=\"overlay\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}","export const msalConfig = {\r\n    auth: {\r\n      clientId: \"08411a04-4a58-4b99-b77a-18666beeac96\",\r\n      authority: \"https://login.microsoftonline.com/1b16ab3e-b8f6-4fe3-9f3e-2db7fe549f6a/\",\r\n      redirectUri: \"http://localhost:3000/validate-vaccine-certificate\",\r\n    },\r\n    cache: {\r\n      cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n      storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    }\r\n  };\r\n  \r\n  // Add scopes here for ID token to be used at Microsoft identity platform endpoints.\r\n  export const loginRequest = {\r\n   scopes: [\"User.Read\"]\r\n  };\r\n  \r\n  // Add the endpoints here for Microsoft Graph API services you'd like to use.\r\n  export const graphConfig = {\r\n      graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\r\n      graphUserAvatarEndpoint: (user) => `https://graph.microsoft.com/v1.0/users/${user}/photo/$value`\r\n  };","import { graphConfig } from \"./authConfig\";\r\n/**\r\n * Attaches a given access token to a Microsoft Graph API call. Returns information about the user\r\n */\r\nexport async function callMsGraph(accessToken) {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n\r\n    headers.append(\"Authorization\", bearer);\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n\r\n    return fetch(graphConfig.graphMeEndpoint, options)\r\n        .then(response => {console.log(response); return response.json()})\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function GetUserAvatar(accessToken, user)\r\n{\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n\r\n    headers.append(\"Authorization\", bearer);\r\n    headers.append(\"Content-Type\", \"image/jpeg\");\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n    };\r\n\r\n    return fetch(graphConfig.graphUserAvatarEndpoint(user), options)\r\n        .then(response => { \r\n            console.log(\"Get Avatar\",response);\r\n            if (response != null && response.ok) {response.blob().then((data) => {\r\n                if (data !== null) {\r\n                  window.URL = window.URL || window.webkitURL;\r\n                  return window.URL.createObjectURL(data);\r\n                }\r\n              });\r\n            } else {\r\n              throw new Error(\"Profile image not found\");\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"./index.css\";\r\nimport VerifyCertificateImg from \"../../assets/img/verify-certificate.png\"\r\nimport HexagonImg from \"../../assets/img/hexagon.png\"\r\nimport QRCodeImg from \"../../assets/img/qr-code.svg\"\r\nimport {CertificateStatus} from \"../CertificateStatus\";\r\nimport {CustomButton} from \"../CustomButton\";\r\nimport QRScanner from \"../QRScanner\";\r\nimport JSZip from \"jszip\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../../authConfig\";\r\nimport  { callMsGraph} from \"../../graph\";\r\nexport const CERTIFICATE_FILE = \"certificate.json\";\r\n\r\nexport const VerifyCertificate = () => {\r\n    const {instance, accounts} = useMsal();\r\n    const [graphData, setGraphData] = useState();\r\n    const [result, setResult] = useState(\"\");\r\n    const [showScanner, setShowScanner] = useState(false);\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    useEffect(() => {        \r\n        instance.acquireTokenSilent(request).then((response) => {        \r\n        callMsGraph(response.accessToken).then(response => {\r\n          setGraphData(response);\r\n          })\r\n        });\r\n        \r\n    }, []);\r\n\r\n    const handleScan = data => {\r\n        if (data) {\r\n            const zip = new JSZip();\r\n            zip.loadAsync(data).then((contents) => {\r\n                return contents.files[CERTIFICATE_FILE].async('text')\r\n            }).then(function (contents) {\r\n                setResult(contents)\r\n            }).catch(err => {\r\n                    setResult(data)\r\n                }\r\n            );\r\n\r\n        }\r\n    };\r\n    const handleError = err => {\r\n        console.error(err)\r\n    };\r\n    return (\r\n        <div className=\"container-fluid verify-certificate-wrapper\">\r\n            {\r\n                !result &&\r\n                <>\r\n                    {!showScanner &&\r\n                    <>\r\n                        <img src={HexagonImg} style={{marginTop: \"10px\"}} className=\"banner-img\" alt=\"Hexagon Logo\" width=\"200\"/>\r\n                        {graphData && <p>Welcome {graphData.givenName}</p>}\r\n                        <img src={VerifyCertificateImg} className=\"banner-img\" alt=\"banner-img\" height=\"150\"/>\r\n                        <h5 className=\"text-center\">Verify vaccination certificate</h5>\r\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(true)}>\r\n                            <span>Scan QR code</span>\r\n                            <img className=\"ml-3\" src={QRCodeImg} alt={\"\"}/>\r\n                        </CustomButton>                        \r\n                    </>}\r\n                    {showScanner &&\r\n                    <>\r\n                        <QRScanner onError={handleError}\r\n                                   onScan={handleScan}/>\r\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(false)}>BACK</CustomButton>\r\n                    </>\r\n                    }\r\n                </>\r\n            }\r\n            {\r\n                result && <CertificateStatus certificateData={result} goBack={() => {\r\n                    setShowScanner(false);\r\n                    setResult(\"\");\r\n                }\r\n                }/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import { combineReducers } from \"redux\";\nimport {eventsReducer} from \"./events\";\n\nexport default combineReducers({ events: eventsReducer });\n","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n\nconst persistedState = loadState();\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../../authConfig\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction handleLogin(instance) {\r\n  instance.loginRedirect(loginRequest)\r\n  .catch((e) => {\r\n    console.error(e);\r\n  });\r\n}\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for login\r\n */\r\nexport const SignInButton = () => {\r\n  const { instance } = useMsal();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"secondary\"\r\n      className=\"ml-auto\"\r\n      onClick={() => handleLogin(instance)}\r\n    >\r\n      Sign in\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction handleLogout(instance) {\r\n  instance.logoutRedirect()\r\n  .catch((e) => {\r\n    console.error(e);\r\n  });\r\n}\r\n\r\n/**\r\n * Renders a button which, when selected, will redirect the page to the logout prompt\r\n */\r\nexport const SignOutButton = () => {\r\n  const { instance } = useMsal();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"secondary\"\r\n      className=\"ml-auto\"\r\n      onClick={() => handleLogout(instance)}\r\n    >\r\n      Sign out\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useIsAuthenticated } from \"@azure/msal-react\";\r\nimport { SignInButton } from \"./SignInButton\";\r\nimport { SignOutButton } from \"./SignOutButton\";\r\n\r\n/**\r\n * Renders the navbar component with a sign-in button if a user is not authenticated\r\n */\r\nexport const PageLayout = (props) => {\r\n    const isAuthenticated = useIsAuthenticated();\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"secondary\" variant=\"dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">Covid Certificate Verification</a>\r\n                {  isAuthenticated ? <SignOutButton />:<SignInButton /> }\r\n            </Navbar>            \r\n            <br />\r\n            <br />\r\n            {props.children}\r\n        </>\r\n    );\r\n};","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { VerifyCertificate } from \"./components/VerifyCertificate\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport {\r\n  AuthenticatedTemplate,\r\n  UnauthenticatedTemplate,\r\n} from \"@azure/msal-react\";\r\nimport { PageLayout } from \"./components/PageLayout\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <PageLayout>\r\n          <AuthenticatedTemplate>\r\n            <VerifyCertificate />\r\n          </AuthenticatedTemplate>\r\n          <UnauthenticatedTemplate>\r\n            <p>You are not signed in! Please sign in.</p>\r\n          </UnauthenticatedTemplate>\r\n        </PageLayout>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { MsalProvider } from \"@azure/msal-react\";\r\nimport { msalConfig } from \"./authConfig\";\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MsalProvider instance={msalInstance}>\r\n      <App />\r\n    </MsalProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}